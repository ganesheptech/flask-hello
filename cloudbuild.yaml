steps:
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]
  # [END cloudbuild_python_dependencies_yaml]

  # [START cloudbuild_python_image_yaml]
  # Docker Build
  - name: "gcr.io/cloud-builders/docker"
    args: [
        "build",
        "-t",
        # "us-central1-docker.pkg.dev/${PROJECT_ID}/flask-hello:${SHORT_SHA}",
        "asdf:${SHORT_SHA}",
        # '--file=Dockerfile-base'
        ".",
      ]
  # [END cloudbuild_python_image_yaml]

  # [START cloudbuild_python_push_yaml]
  # Docker push to Google Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: [
        "push",
        # "us-central1-docker.pkg.dev/${PROJECT_ID}/flask-hello:${SHORT_SHA}",
        "asdf",
      ]
  # [END cloudbuild_python_push_yaml]

  # [START cloudbuild_python_deploy_yaml]
  # Deploy to Cloud Run
  - name: google/cloud-sdk
    args: [
        "gcloud",
        "run",
        "deploy",
        "helloworld-${SHORT_SHA}",
        "--image=asdf",
        # "--image=us-central1-docker.pkg.dev/${PROJECT_ID}/flask-hello:${SHORT_SHA}",
        "--region",
        "europe-westb",
        "--platform",
        "managed",
        "--allow-unauthenticated",
      ]
  # [END cloudbuild_python_deploy_yaml]

# [START cloudbuild_python_logs_yaml]
# Save test logs to Google Cloud Storage
# artifacts:
#   objects:
#     location: gs://${_BUCKET_NAME}/
#     paths:
#       - ${SHORT_SHA}_test_log.xml
# [END cloudbuild_python_logs_yaml]
# Store images in Google Artifact Registry
images:
  - us-central1-docker.pkg.dev/${PROJECT_ID}/flask-hello:${SHORT_SHA}
  # TODO Address
# [END cloudbuild_python_yaml]
